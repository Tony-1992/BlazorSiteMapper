name: Publish NuGet Package

# Run on pushes to main with a version tag (e.g., v1.2.3)
on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  #---------------------------------------------------------------------
  # Job 1: Build the Project and Create the NuGet Package
  # This job compiles the code and packages it into a .nupkg file.
  #---------------------------------------------------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore, Build, and Pack
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet pack --configuration Release --no-build -p:PackageVersion=${GITHUB_REF_NAME#v} -o ./artifacts

      # Upload the .nupkg file as an artifact to share with other jobs
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: ./artifacts/*.nupkg

  #---------------------------------------------------------------------
  # Job 2: Create a DRAFT GitHub Release
  # This job creates a draft release on GitHub with auto-generated notes.
  # It runs BEFORE the NuGet publish to ensure this step succeeds first.
  #---------------------------------------------------------------------
  create-github-release:
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    permissions:
      contents: write # Grant permission to create a release
    steps:
      # Download the .nupkg artifact from the build job
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkg

      - name: Create Draft GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: "*.nupkg"
          draft: true # Creates the release as a draft, not visible to the public yet

  #---------------------------------------------------------------------
  # Job 3: Publish to NuGet.org and Finalize the Release
  # This is the final job. It publishes the package to NuGet and then
  # makes the GitHub release public.
  #---------------------------------------------------------------------
  publish-nuget:
    runs-on: ubuntu-latest
    needs: create-github-release # This job depends on the 'create-github-release' job
    permissions:
      contents: write
    steps:
      # Download the .nupkg artifact again for publishing
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkg

      - name: Push to NuGet
        run: dotnet nuget push "*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json"

      # After a successful push, find the draft release and publish it
      - name: Publish the release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }} # Ensures we are updating the correct release
          draft: false # Toggles the draft status to false, making it public